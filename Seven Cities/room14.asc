//snow particle system
SnowRainPS_Data ps;


function initParticles() {
  int snowflake_sprite = 408;
  ps.InitParticleSystem(SNOW,   snowflake_sprite, 1,  NO_WIND,  70, 35);
  //ParticleSystemAddRect(170, 175, 315, 235);
  ps.ParticleSystemEnableRegion(1, 50);
  ps.SetParticleSystemIncrements(5, 3);
  ps.enableTransParency = true;
  //ps.collisionDetect = true;

}


function initWeatherModule() 

{
  #define NBSPRITES 1
    int snowflake_sprite[NBSPRITES];
    
    /*
    snowflake_sprite[0] = 408;
    snowflake_sprite[1] = 409;
    snowflake_sprite[2] = 410;
    */
    /*
    snowflake_sprite[0] = 412;
    snowflake_sprite[1] = 411;
    snowflake_sprite[2] = 412; 
    */
    snowflake_sprite[0] = 413;
     
    int nbSnowflakes = 60; //multiply by NBSPRITES to get the final number
    
    if (WeatherModule.IsWeatherGoing()) 
      WeatherModule.Stop();
      
    WeatherModule.Init(nbSnowflakes*NBSPRITES, 10, 10, true);
    //Display ("Weathermachine says: More Snow");  
    
    int i=0;
    while (i<nbSnowflakes)
    {
      
      WeatherModule.SetSprite(i*NBSPRITES+0, snowflake_sprite[0]);
      //WeatherModule.SetSprite(i*NBSPRITES+1, snowflake_sprite[1]);
      //WeatherModule.SetSprite(i*NBSPRITES+2, snowflake_sprite[2]); 
      
      i++; 
    }
       
    int VERTICAL_SPEED = 3;
    int HORIZONTAL_SPEED = -5;    
    WeatherModule.Start(VERTICAL_SPEED,   HORIZONTAL_SPEED, false,  2, 2);  
}

#define NB_FOOTSTEPS 6
Object* footSteps[NB_FOOTSTEPS];

function bindFootSteps() {
  footSteps[0] = oFootStep1;
  footSteps[1] = oFootStep2;
  footSteps[2] = oFootStep3;
  footSteps[3] = oFootStep4;
  footSteps[4] = oFootStep5;
  footSteps[5] = oFootStep6;
  
  int i=0;
  while (i<NB_FOOTSTEPS)
  {
    footSteps[i].Transparency = 100;
    i++;
    
  }
     
  
}


void AnimateAll()
{
  oFlagPure.SetView(FLAGPURE);
  oFlagPure.Animate(0, 1, eRepeat, eNoBlock);

  Wait(1);
  
  oSnowOverlay.SetView(SNOWOVERLAY);
  oSnowOverlay.Animate(0,  2, eRepeat, eNoBlock);
  oSnowOverlay.Visible = true;
  oSnowOverlay.Transparency = 30;
  
  Wait(1);
  
}


function room_FirstLoad()
{
  PlayerUI.Enable(); 
  
  #ifdef TESTING
  if (CheckPoints.IsJumping()) { //we're in debug and we arrived in this room using the "jump to checkpoint" button
    CheckPoints.JumpDone();
  }
  #endif
  
  AnimateAll();
}

int layover_opacity = 100;
bool opacity_increasing = false;

function makeBackgroundSnowFlicker()
{
  /*
    if (!IsGamePaused())
    {
        
      int FLICK_SPEED = 15;
      
      if (opacity_increasing) {
        layover_opacity+=FLICK_SPEED;
        if (layover_opacity >=100) {
            opacity_increasing = false;
            layover_opacity = 100;
        }
      }
      else 
      {
        layover_opacity-=FLICK_SPEED;
        if (layover_opacity <=0) {
            opacity_increasing = true;
            layover_opacity = 0;
        }      
      }
      oWindLayover.Transparency = 100-layover_opacity;  
    }
    */
    oWindLayover.Transparency = 100;
}

int howManyFramesSinceLastFootStep = 0;

function manageFootSteps()
{
    if (!IsGamePaused())
    {
      int i;
      
      int IMG_FOOTSTEPLEGS_1 = 434;
      int IMG_FOOTSTEPLEGS_2 = 435;
      oFootstep_legs.X = player.x-10;
      oFootstep_legs.Y = player.y+5;  
      oFootstep_legs.Baseline = player.y+5;
      
      /*
      ////// DEBUG ///////
      i=0;
      DebugListbox.Clear();
      while (i<NB_FOOTSTEPS)
      {
        DebugListbox.AddItem(String.Format("%d", footSteps[i].Transparency));
        i++;
      }
      ///////~DEBUG /////     
      */
      
      if (player.Moving) 
      {
          if (howManyFramesSinceLastFootStep > 10) //every x frames, we'll create a footstep
          {
            //Find an unused footstep object in the room
            i=0;
            int found = -1;
            while (i<NB_FOOTSTEPS)
            {
              if (footSteps[i].Transparency == 100) //inivisble objects can be recycled
                found = i;
              i++;
            }
            
            if(found>=0) //if we found an unused footstep object in the room
            {
              howManyFramesSinceLastFootStep = 0; //reset counter
              
              footSteps[found].Transparency = 0; //it's now fully visible
              
              //we place it under the feet of Indy (with a little randomization)
              footSteps[found].X = player.x-2+Random(4);
              footSteps[found].Y = player.y+1+Random(4);
              footSteps[found].Baseline = player.y-10; //just a quick hack
            }
          }
          
          //We make the image of 'oFootstep_legs' alternate
          if (howManyFramesSinceLastFootStep >= 5) 
            oFootstep_legs.Graphic = IMG_FOOTSTEPLEGS_2;
          else   
            oFootstep_legs.Graphic = IMG_FOOTSTEPLEGS_1;
          
      }
      
      i=0;
      while (i<NB_FOOTSTEPS)
      {
        int transp = footSteps[i].Transparency;
        int SPEED = 1;
        transp+=SPEED;
        if (transp>100)
          transp = 100;
          
        footSteps[i].Transparency = transp;
        i++;
      }
            
      howManyFramesSinceLastFootStep++;
     
    } //if (!IsGamePaused())
}

function room_RepExec()
{
  makeBackgroundSnowFlicker();
  //oWindLayover.Visible=false;
  
  manageFootSteps();
}




function room_Leave()
{
  //ps.ShutdownParticleSystem();
  Stop_Ambient_All();
}

function room_AfterFadeIn()
{
  /*
  if((cEgo.PreviousRoom == 2) || (cEgo.PreviousRoom == 3))
  {
    cEgo.Walk(220, 200, eBlock);
    cEgo.FaceLocation(cEgo.x, Room.Height, eBlock);
  }
  else
  {
    cEgo.Say("width: %d, height: %d",Room.Width, Room.Height);
    cEgo.Say("Its snowing...");
    ps.SetParticleSystemData(NO_CHANGE_PARTICLE, NO_WIND);
    cEgo.Say("Looks like the wind's died down now.");
    ps.SetParticleSystemData(SNOW, LEFT_TO_RIGHT_DIAGONAL);
    ps.SetParticleSystemIncrements(4, 2, 5);
    cEgo.Say("I think I said it a moment too soon...");
    ps.SetParticleSystemOverlayPercent();
    //Wait(200);
    //ps.SetParticleSystemData(NO_CHANGE_PARTICLE, RIGHT_TO_LEFT_DIAGONAL);
  }
  */
}


function repeatedly_execute_always()
{
  //ps.RenderParticles();
}

function room_Load()
{
  //initParticles();
  
  //initWeatherModule() ; //REPLACED WITH SELMIAK'S SNOW ANIM
  
  bindFootSteps();
  
  oFootstep_legs.Transparency = 50;
  manageFootSteps();
  
  //player.Tint(100, 100, 250,  50,  100);
  player.ChangeView(INDY_MOUNTAIN); //set Indy's view to INDY_MOUNTAIN
    
    //aSnow_tempest.Play(1, eRepeat);
  aSnow_tempest.Play_Ambient(100);
  //aSound3.Play_Ambient(); //DEBUG
}

