// room script file

enum PlayerPosition {
  eOutside, 
  eCorridor, 
  eInside, 
  eSierra
  
};

int outside_rightEdge = 575;
int inside_leftEdge = 595;

PlayerPosition playerPosition;

function room_FirstLoad()
{
  #ifdef TESTING
  if (CheckPoints.IsJumping()) { //we're in debug and we arrived in this room using the "jump to checkpoint" button
     
    CheckPoints.JumpDone(); 
  }
  Mouse.Mode = eModeWalkto;
  PlayerUI.EnableAndShow(); 
  #endif
  
  playerPosition = eOutside;
  //Wait(1);
}


function room_RepExec()
{

}


//forbids the scrolling too far to the left, to avoid showing further than the cave's
//entrance, even if the character is walking to the right-hand-side of the background.
void forbidScrollingToTheRight()
{
  /*
  int rightLimit = 375; //the player's maximum x position. Past this value the scrolling gets locked
  
  if (player.x >= rightLimit)
    SetViewport(rightLimit - System.ScreenWidth/2,  GetViewportY());
  else
    ReleaseViewport(); 
  */
  
  SmoothScroll_SetEdges(0, outside_rightEdge, 0,  Room.Height);
}


function repeatedly_execute_always()
{
  if (playerPosition == eOutside) {
    forbidScrollingToTheRight();
  } else if (playerPosition == eCorridor) {
    SmoothScroll_SetEdges(inside_leftEdge, Room.Width, 0,  Room.Height);
  } else if (playerPosition == eInside) {
    //DONOTHING
  }
}


void fastScrollToTheCave() {
  SmoothScroll_ScrollingOff();
  while (GetViewportX() < inside_leftEdge) {
    SetViewport(GetViewportX()+10, GetViewportY());
    
    if (GetViewportY() < 60)
      SetViewport(GetViewportX(), GetViewportY()+10);
    Wait(1);
  }
  
  SmoothScroll_SetEdges(inside_leftEdge, Room.Width, 0,  Room.Height);
  SmoothScroll_ScrollingOn();
}

function region4_WalksOnto()
{
  //Display("REGION 4");
  playerPosition = eCorridor;
  //int i=GetViewportX();
  fastScrollToTheCave();
  player.Walk(644, 147, eBlock, eAnywhere);
  player.Walk(667, 167, eBlock, eAnywhere);
  
  
}

function region7_Standing()
{

}

function region8_WalksOnto()
{
  //Display("REGION 8");
  player.Walk(264, 111, eBlock, eAnywhere); //Walk over the little gap without walkable area
  player.Walk(270, 95, eBlock);
  player.Walk(123, 95, eBlock);
  player.ChangeRoom(eRoom_01_01_TibetTop, 160, 140); //PLACEHOLDER: TIBET
}


function cutscene_WalkInFromCanyon()
{
  //make the tiny character walk on the sierras: walk up, then to the right, then appear 
  //from around the corner
  StartCutscene(eSkipESCOnly);
  player.Walk(123, 95, eBlock);
  player.Walk(252, 95, eBlock);
  player.Walk(252, 114, eBlock, eAnywhere); //Walk over the little gap without walkable area
  player.Walk(295, 157, eBlock);
  EndCutscene();
  
}
function region7_WalksOnto()
{
    player.x = 36; player.y = 157;
    DialogsLogic.SetVarBool("03_02_DoCanyonCutscene", true);

  

  

}

function room_Load()
{
  playerPosition = eOutside;
  Mouse.Mode = eModeWalkto;
  PlayerUI.EnableAndShow(); 
      
  //Enable parallax
  SmoothScroll_PxOn();
  
}

function room_AfterFadeIn()
{
    if (DialogsLogic.GetVarBool("03_02_DoCanyonCutscene")) {
        cutscene_WalkInFromCanyon();
        DialogsLogic.SetVarBool("03_02_DoCanyonCutscene", false);
    }
}
