// room script file


function room_FirstLoad()
{
RemoveWalkableArea(2);        // Yard Door
RemoveWalkableArea(3);        //  area close to shore
RemoveWalkableArea(4);        //  area to house
RemoveWalkableArea(5);        //  area close to paddling row
}



function room_Load()
{
  //SetTimer (1, 10);             //Timer used for wandering dog

  ////////Charalampos//////
  //remove when door2 and cFisherman get ready
  /////////////////////////
  cFisherman.Transparency=100;  

  if (DialogsLogic.GetVarBool("eDialog_NunTalkedAboutStatue") == true) {
    ohead.Visible=true;
  }

  #ifdef TESTING
  if (CheckPoints.IsJumping()) { //we're in debug and we arrived in this room using the "jump to checkpoint" button
    CheckPoints.JumpDone();
  }
  #endif

  PlayerUI.EnableAndShow(); 
}

function region1_WalksOnto()
{
  DialogsLogic.SetVarBool("eDialog_IndyStandsOnBoat",true);
}

function region1_WalksOff()
{
  DialogsLogic.SetVarBool("eDialog_IndyStandsOnBoat",false);
}

function oConventDoor_AnyClick()
{
  int x = 56;
  int y = 66;

  int walk_x= 58;
  int walk_y= 103;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2(x, y, "I believe it's the main door.");
  } else if (Verbs.UsedAction(eGA_Open)) {
    player.Walk (59, 103, eBlock, eWalkableAreas);
    Display ("Indy opens door");
    RestoreWalkableArea(4);
    player.Walk (11, 75, eBlock, eWalkableAreas);
    player.ChangeRoom (35, -30, 50);
  } else {Unhandled_FaceLocation(x, y, objType);
  }
}
  


function oYardDoor_AnyClick()
{
  int x = 417;
  int y = 85;

  int walk_x = 444;
  int walk_y = 113;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "That door leads to the convent.");
  } else if (Verbs.UsedAction(eGA_Open) && DialogsLogic.GetVarBool("eDialog_NunHeardTheDog")==false) {                                 
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    player.FaceAndSay2 (x, y, "It's locked.");
    cInvDog.Say ("Woof. Woof.");
    player.FaceAndSay(eDown, "Looks like somebody is allready in there!");
    DialogsLogic.SetVarBool ("eDialog_IndyTriedToEnterConvent",true);
  } else if (Verbs.UsedAction( eGA_Use) && DialogsLogic.GetVarBool("eDialog_NunHeardTheDog")==false) {
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    Display ("Sound Effect : Knock Knock");
    cInvDog.Say ("Woof. Woof.");
    player.FaceAndSay(eDown, "Now that'a a problem.");
    DialogsLogic.SetVarBool ("eDialog_IndyTriedToEnterConvent",true);
  } else if (Verbs.UsedAction(eGA_TalkTo) && DialogsLogic.GetVarBool("eDialog_NunHeardTheDog")==false) {
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    player.FaceAndSay2 (x, y, "Hello ?");
    cInvDog.Say ("Woof. Woof.");
    player.FaceAndSay2(x, y, "Not in a mood for talking, right ?");
    cInvDog.Say ("Woof.");
    DialogsLogic.SetVarBool ("eDialog_IndyTriedToEnterConvent",true);
  } else if (Verbs.UsedAction(eGA_Open) && DialogsLogic.GetVarBool("eDialog_NunHeardTheDog")!=false) {
    Display ("Sound Effect : Knock Knock");
    dNun2.Start();
  } else if (Verbs.UsedAction(eGA_Use) && DialogsLogic.GetVarBool("eDialog_NunHeardTheDog")!=false) {
    Display ("Sound Effect : Knock Knock");
    dNun2.Start();
  } else if (Verbs.UsedAction(eGA_TalkTo) && DialogsLogic.GetVarBool("eDialog_NunHeardTheDog")!=false) {
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    dNun2.Start();
  } else {Unhandled_FaceLocation (x, y, objType);
  }
}  
  




function room_RepExec()
{

  //////////Charalampos : Mathieu asked the dog should be static////////////

  //if (IsTimerExpired(1)) {
  //  cDog.Walk (80+Random(250),90+Random(40), eNoBlock, eWalkableAreas);
  //  SetTimer(1, Random(500));
  //}

  if (DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") ==true) {
    RestoreWalkableArea(3);
    RemoveWalkableArea(5);
  } else {
    RemoveWalkableArea(3);
    RestoreWalkableArea(5);
  }

}








function oRope_AnyClick()
{
  int x = 650;
  int y = 110;

  int walk_x = 608;
  int walk_y = 120;

  eObjectType objType = eGizmo;

  if(Verbs.UsedAction(eGA_PickUp)) {
    player.FaceAndSay2 (x, y, "It's rather short, I dont need it.");
  } else if (Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Pull)) {
    if (DialogsLogic.GetVarBool("eDialog_IndyStandsOnBoat")) {
      player.FaceAndSay2(x, y, "why should I do that?");
    } else if (DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") == 1) {
      player.FaceAndSay2 (x, y, "The boat is allready at shore.");
    } else {
      player.Walk (x, y, eBlock, eWalkableAreas);
      oBoat.Move (617, 127, 2, eBlock, eAnywhere);
      player.FaceAndSay2(x, y, "Ok, I have pulled the boat over here");
      DialogsLogic.SetVarBool ("eDialog_BoatIsAtShore",true);
    } 
    } else {Unhandled_FaceLocation (x, y, objType);
  }
}




function oBoat_AnyClick()
{
  int x = 628;
  int y = 115;

  int walk_x = 616; 
  int walk_y = 120;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_Use) && DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") ==false) {
    player.FaceAndSay2(x, y, "It's not within reach.");
  } else if (Verbs.UsedAction(eGA_Use) && DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") ==true) {
    player.FaceAndSay2 (x, y, "I have things to do here");
  } else if (Verbs.UsedAction(eGA_LookAt)) {
    if (DialogsLogic.GetVarBool("eDialog_IndyPickedUpCan") == true ) {
      player.FaceAndSay2(x, y, "It's empty.");
    } else if (DialogsLogic.GetVarBool("eDialog_IndyPickedUpCan") != 1 ) {
      if (DialogsLogic.GetVarBool("eDialog_IndyStandsOnBoat") == 1) {
        player.FaceAndSay2(x, y, "There's is a spoiled can of food. I'll take it.");
        player.AddInventory (iCan);
        DialogsLogic.SetVarBool ("eDialog_IndyPickedUpCan",true);
      } else if (DialogsLogic.GetVarBool("eDialog_IndyStandsOnBoat") != 1) {
        if (DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") ==1) {
          player.FaceAndSay2(x, y, "There's is a spoiled can of food. I'll take it.");
          player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
          player.AddInventory (iCan);
          DialogsLogic.SetVarBool ("eDialog_IndyPickedUpCan",true);
        } else if (DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") !=1) {
          player.FaceAndSay2 (x, y, "It's not within reach.");
        }
      }
    } 
  } else {
    Unhandled_FaceLocation(x, y, objType);
  }
}
        
        




//&& DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") ==0) {
//  player.FaceAndSay2 (x, y, "Probably some fish boat.");
//} else if (Verbs.UsedAction(eGA_LookAt) {
//  if (DialogsLogic.GetVarBool("eDialog_IndyPickedUpCan")==1) {
//  player.FaceAndSay2(x, y, "It's empty");
//}  else if (DialogsLogic.GetVarBool("eDialog_IndyPickedUpCan")!=1) {
//  player.FaceAndSay2 (x, y, "There's is a spoiled can of food. I'll take it.");
//  player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
//  player.AddInventory (iCan);
//  DialogsLogic.SetVarBool ("eDialog_IndyPickedUpCan",1);
//} 


//else if(Verbs.UsedAction(eGA_LookAt && DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") ==1 && DialogsLogic.GetVarBool("eDialog_IndyPickedUpCan") !=1) {
//  player.FaceAndSay2 (x, y, "There's is a spoiled can of food. I'll take it.");
//  player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
//  player.AddInventory (iCan);
//  DialogsLogic.SetVarBool ("eDialog_IndyPickedUpCan",1);
//} else if (Verbs.UsedAction(eGA_LookAt && DialogsLogic.GetVarBool("eDialog_IndyPickedUpCan")==1) {
//  player.FaceAndSay2(x, y, "It's empty");
//} else {Unhandled_FaceLocation(x, y, eHeavy);
//}
//}


function oHole_AnyClick()
{
  int x = 616;
  int y = 130;

  int walk_x = 616; 
  int walk_y = 130;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_Use)) {
    player.FaceAndSay2(x, y, "I can't do much without the proper tool!");
  } else if (Verbs.UsedAction(eGA_LookAt) && DialogsLogic.GetVarBool("eDialog_IndyHasUsedTool") ==1) {
    player.FaceAndSay2(x, y, "It's activated.");
    player.FaceAndSay2(x, y, "The river's water is flowing in.");
  } else if (Verbs.UsedAction(eGA_LookAt) && DialogsLogic.GetVarBool("eDialog_IndyHasCutGrass") ==1) {
    player.FaceAndSay2 (x, y, "Grass is not blocking it anymore.");
  } else if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "Probably the mechanism to some irrigation system.");
  } else if (Verbs.UsedAction(eGA_UseInv)) { 
    if (player.ActiveInventory == iKeyTool && DialogsLogic.GetVarBool("eDialog_IndyHasCutGrass") ==1) {
      player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
      DialogsLogic.SetVarBool("eDialog_IndyHasUsedTool",true);
      Display ("Indy turns tool/key and water starts flowing in");
    } else if (player.ActiveInventory == iKeyTool) {
      player.FaceAndSay2 (x, y, "Humpf.It won't turn!");
      player.FaceAndSay2 (x, y, "The grass has grown too much, it's blocking the mechanism.");
  } else {
      Verbs.Unhandled();
    } 
  } else {Unhandled_FaceLocation(x, y, objType);
  }
}



function hGrass_AnyClick()
{
  int x = 645;
  int y = 128;

  int walk_x = 645; 
  int walk_y = 128;

  eObjectType objType = eGizmo;

  if (Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_PickUp)) {
    player.FaceAndSay2 (x, y, "They are really strong and sharp.I can't do it with my bare hands.");
  } else if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "It's just grass.");
  } else if (Verbs.UsedAction(eGA_UseInv)) {
    if (player.ActiveInventory == iPruningShears) {
      player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
      player.FaceAndSay2(x, y, "Humpf!");
      player.FaceAndSay2(x, y, "Those roots were really thick.");
      DialogsLogic.SetVarBool ("eDialog_IndyHasCutGrass",true);
      Display ("Tall grass removed");
    } else {
      Verbs.Unhandled();
      }
  } else {
    Unhandled_FaceLocation(x, y, objType);
  }
}


function oPaddlingRow_AnyClick()
{
  int x = 675;
  int y = 108;

  eObjectType objType = eGizmo;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "It's a paddling row that has fallen off the boat.");
    player.FaceAndSay2 (x, y, "Luckily it has stuck in grass.");
  } else if (Verbs.UsedAction(eGA_PickUp)) {
    if (DialogsLogic.GetVarBool("eDialog_IndyStandsOnBoat")==1 && DialogsLogic.GetVarBool("eDialog_BoatIsAtShore")==0) {
    oPaddlingRow.Visible=false;
    player.AddInventory (iPaddlingOar);
  } else {
    player.FaceAndSay2 (x, y, "I can't reach it from here.");
  }
  } else {
    Unhandled_FaceLocation(x, y, objType);
  }
}


function hWall_AnyClick()
{
  int x = 406;
  int y = 85;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "It's really tall.");
  } else if (Verbs.UsedAction(eGA_Use)) {
    player.FaceAndSay2 (x, y, "The sisters won't help me if I break in.");
  } else if (Verbs.UsedAction(eGA_UseInv)) {
    if (player.ActiveInventory == iCan) {
      player.FaceAndSay2 (x, y, "I'll never throw it far enough to get any benefit from it.");
    } else {
      Verbs.Unhandled();
    }
  } else {
    Unhandled_FaceLocation (x, y, objType);
  }
}

function hHouse_AnyClick()
{
  int x = 507;
  int y = 75;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "The lights are on. Somebody's at home.");
  } else {
    Unhandled_FaceLocation (x, y, objType);
  }
}


function hTree_AnyClick()
{
  int x = 527;
  int y = 78;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "A robust waterside tree.One of the low branches has a funny shape!");
    obranch.Visible = true;
  } else if (Verbs.UsedAction(eGA_UseInv)) {
    if(player.ActiveInventory == iPruningShears) {
      player.FaceAndSay2 (x, y, "I'll leave it as it is.");
  } 
  } else {
    Unhandled_FaceLocation (x, y, objType);
  }
}

function obranch_AnyClick()
{
  int x = 507;
  int y = 75;

  int walk_x = 527;
  int walk_y = 95;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "This branch's end really looks like a hand!Funny.");
  } else if (Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull)) { 
  if (oOpenedCan.Visible==true) {
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    oOpenedCan.Move (495, 26, 2, eBlock, eAnywhere);
    oOpenedCan.Move (466, 8, 2, eBlock, eAnywhere);
    oOpenedCan.Move (441, 12, 2, eBlock, eAnywhere);
    oOpenedCan.Move (400, 21, 2, eBlock, eAnywhere);
    oOpenedCan.Visible = false;
    cInvDog.Say("Woof.");
    Wait(20);
    cInvDog.Say("Woof.");
    cNun.Say ("Hey what's up again with this dog?");
    cNun.Walk(378, 103, eBlock, eWalkableAreas);
    cNun.Say ("Did you hear something? Good dog!");
    Display ("Nun now talks through doors hole");
    DialogsLogic.SetVarBool ("eDialog_NunHeardTheDog",true);
    dNun.Start();
  } else if (Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull)) {
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    Display ("Animation : Indy flexes the branch");
  }
  } else if (Verbs.UsedAction(eGA_UseInv)) {
    if (player.ActiveInventory == iOpenedCan) {      
      player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
      player.LoseInventory (iOpenedCan);
      oOpenedCan.Visible=true;
    } else if (player.ActiveInventory == iPruningShears) {
      player.FaceAndSay2 (x, y, "I am sure I can think something more useful with that branch!");
    } else {
      Verbs.Unhandled();
    }
  } else {
    Unhandled_FaceLocation(x, y, objType);
  }
}
  
    

function oDoor2_AnyClick()
{
  int x = 496;
  int y = 77;

  int walk_x = 489;
  int walk_y = 87;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_TalkTo) || Verbs.UsedAction(eGA_Open)) { 
    if (DialogsLogic.GetVarBool("eDialog_IndyTriedToEnterConvent") == 0 ) {
    player.FaceAndSay2 (x, y, "Right now I am on my way to the convent.");
  } else {
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    player.FaceDirection(eRight);
    Display ("Sound Effect : Knock Knock");
    cFisherman.Say ("Hey! Do you have any idea what time is it?");
    cFisherman.Transparency=0;
    dFisherman.Start();
  }
  } else {
    Unhandled_FaceLocation(x, y, objType);
  }
}



function oPole_AnyClick()
{
  int x = 625;
  int y = 91;

  eObjectType objType = eHeavy;

  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2(x, y, "It's a pole.");
  } else if (DialogsLogic.GetVarBool("eDialog_IndyStandsOnBoat") !=1) {                                           //if Indy is not standing on boat
    if (Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Push)) {
      player.FaceAndSay2(x, y, "It won't do much from here. It's firmly stuck into the ground.");
    } else {
      Unhandled_FaceLocation(x, y, objType);                                                                      //else reaction than push/use
    }
  } else if (DialogsLogic.GetVarBool("eDialog_IndyStandsOnBoat") ==1) {                                         //if Indy stands on boat and boat is left
    if (DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") ==1) {    
        if (Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Use)) {
        Display("Animation : Indy pushes himshelf and the boat towards the right");
        oBoat.Move(638, 119, 3, eNoBlock, eAnywhere);
        player.Move (661, 107, eBlock, eAnywhere);
        DialogsLogic.SetVarBool("eDialog_BoatIsAtShore",false);
      } else if (Verbs.UsedAction(eGA_Pull)) {
        player.FaceAndSay2 (x, y, "The boat is close enough to the shore.");
      } else {
        Unhandled_FaceLocation (x, y, objType);
    }
    } else if (DialogsLogic.GetVarBool("eDialog_BoatIsAtShore") !=1) {
      if (Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use)) {
        Display ("Animation : Indy pulls on the pole and brings himshelf and the boat towards the left");
        oBoat.Move (617, 127, 3, eNoBlock, eAnywhere);
        player.Move (630, 116, eBlock, eAnywhere);
        DialogsLogic.SetVarBool("eDialog_BoatIsAtShore",true);
      } else if (Verbs.UsedAction(eGA_Push)) {
        player.FaceAndSay2 (x, y, "The rope is stopping the boat");
      } else {
        Unhandled_FaceLocation(x, y, objType);
      }
    }
  }
}
  
  
  
function hInsideWall_AnyClick()
{
  int x=193;
  int y=50;
  
  eObjectType objType = eHeavy;
  
  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "It's the wall beetween the yard and the church.");
  } else if (Verbs.UsedAction(eGA_Use)) {
    player.FaceAndSay2 (x, y, "This wall is too tall and instable to climb");
    player.FaceAndSay2 (x, y, "and besides, if I get caught, I won't have a chance to search for the manuscript.");
  } else {Unhandled_FaceLocation(x, y, objType);
  }
}


function hChurch_AnyClick()
{
  int x=237;
  int y=33;
  
  eObjectType objType = eHeavy;
  
  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "This church would look very much like Friar Jerome's church.");
    player.FaceAndSay2 (x, y, "But it's in ruins!");
    player.FaceAndSay2 (x, y, "Still I bet there are clues in there.");
  } else { Unhandled_FaceLocation(x, y, objType);
  }
}

function oBucket_AnyClick()
{
int x=128;
int y=108;

eObjectType objType = eGizmo;

if (Verbs.UsedAction(eGA_LookAt)) {
  player.FaceAndSay2 (x, y, "It's an old rusty bucket.");
} else if (Verbs.UsedAction(eGA_PickUp)) {
  player.Walk (x, y, eBlock, eWalkableAreas);
  oBucket.Visible=false;
  player.FaceAndSay2 (x, y, "Apparently it's full of holes but it' still used to move dirt around.");
  Display ("Inventory item old bucket added!");
} else {Unhandled_FaceLocation (x, y, objType);
}
}



function oLever_AnyClick()
{
  int x=265;
  int y=129;
  
  eObjectType objType = eHeavy;
  
  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "It's a lever.");
  } else if (Verbs.UsedAction(eGA_Use)) {
    if (DialogsLogic.GetVarBool("eDialog_GardenLever") == 0 ) {              // 1. If lever is up
    player.Walk (x, y, eBlock, eWalkableAreas);
    oLever.Move (x, y+15, 2, eBlock, eAnywhere);
    DialogsLogic.SetVarBool ("eDialog_GardenLever",true);
    if (DialogsLogic.GetVarBool("eDialog_IndyHasUsedTool") == 0) {          // 1.1  and other mechanism is not activated  
    player.FaceAndSay2 (x, y, "Nothing happened.");
    } else if (DialogsLogic.GetVarBool("eDialog_IndyHasUsedTool") == 1) {   //1.2 and other mechanism is activated
    player.FaceAndSay2 (x, y, "Water is flowing in garden!");
    }
    } else if (DialogsLogic.GetVarBool("eDialog_GardenLever") == 1 ) {      //2. If lever is down
    player.Walk (x, y, eBlock, eWalkableAreas);
    oLever.Move (x, 129, 2, eBlock, eAnywhere);
    DialogsLogic.SetVarBool ("eDialog_GardenLever",false);
    if (DialogsLogic.GetVarBool("eDialog_IndyHasUsedTool") == 0) {          //2.1 and other mechanism is not activated
    player.FaceAndSay2 (x, y, "Nothing happened.");
    } else if (DialogsLogic.GetVarBool("eDialog_IndyHasUsedTool") == 1) {   //2.2  and other mechanism is activated
    player.FaceAndSay2 (x, y, "Enough with the watering.");
    }
    }  
  } else {Unhandled_FaceLocation(x, y, objType);
  }
}


function hSky_AnyClick()
{

if (Verbs.UsedAction(eGA_LookAt)) {
  player.FaceDirection(eUp);
  player.Say ("Wow, Paris lights clearly make it brighter.");
} else {
  Unhandled_FaceDirection(eUp, eHeavy);
}
}


function room_AfterFadeIn()
{
  if (player.PreviousRoom == 35) {
    player.Walk (63, 111, eBlock, eWalkableAreas);
  }
}

function hStatue_AnyClick()
{
  int x=285;
  int y=80;
  
  eObjectType objType = eHeavy;

if (Verbs.UsedAction(eGA_LookAt)) {
  if (DialogsLogic.GetVarBool("eDialog_NunTalkedAboutStatue") == 0) {
  player.FaceAndSay2(x, y, "A statue of Santa Magdalena");
  } else if (DialogsLogic.GetVarBool("eDialog_NunTalkedAboutStatue") == 1) {
    player.FaceAndSay2 (x, y, "A statue of Santa Magdalena.");
    player.FaceAndSay2 (x, y, "Hey! The nun actually said something about it!");
  } else {
    Unhandled_FaceLocation (x, y, objType);
  }
}
}

function ohead_AnyClick()
{
  int x=283;
  int y=60;
  
  eObjectType objType = eHeavy;
  
  if (Verbs.UsedAction(eGA_LookAt)) {
    if (DialogsLogic.GetVarBool("eDialog_NunTalkedAboutStatue") == false) {
      player.FaceAndSay2 (x, y, "Santa Magdalena!");
    } else if (DialogsLogic.GetVarBool("eDialog_NunTalkedAboutStatue") == true) {
    player.Walk (277, 95, eBlock, eWalkableAreas);
    player.FaceAndSay2 (x, y, "Hey! There's a key in the statues head!");
    Display ("key added to inventory");
    player.AddInventory (iKey);     ///// SOS temporary item iKey until new key sprite is ready
    DialogsLogic.SetVarBool ("eDialog_NunTalkedAboutStatue",false);
  } else {
    Unhandled_FaceLocation(x, y, objType);
  }
 }
}


function oChurchDoor_AnyClick()
{
  int x=263;
  int y=71;
  
  int walk_x=256;
  int walk_y=80;
  
  eObjectType objType = eHeavy;
  
  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "I bet this door is leading to the ruins of frior Jerome's church.");
  } else if (Verbs.UsedAction(eGA_Open)) {
    player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
    player.FaceAndSay2 (x, y, "It's locked.");
  } else if (Verbs.UsedAction(eGA_UseInv)) {
    if (player.ActiveInventory == iKey) {
      player.Walk (walk_x, walk_y, eBlock, eWalkableAreas);
      player.LoseInventory (iKey);
      Display ("Door is now open");
    } else {
      Verbs.Unhandled();
    }
  } else {
    Unhandled_FaceLocation(x, y, objType);
  }
}

function hLamp_AnyClick()
{
  int x=103;
  int y=42;
  
  eObjectType objType = eHeavy;
  
  if (Verbs.UsedAction(eGA_LookAt)) {
    player.FaceAndSay2 (x, y, "That lamp is prividing enough light for the whole yard.");
  } else {
    Unhandled_FaceLocation (x, y, objType);
  }  
}
